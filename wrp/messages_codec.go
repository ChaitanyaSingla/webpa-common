// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package wrp

import (
	"errors"
	"fmt"
	codec1978 "github.com/ugorji/go/codec"
	"reflect"
	"runtime"
)

const (
	// ----- content types ----
	codecSelferC_UTF8558 = 1
	codecSelferC_RAW558  = 0
	// ----- value types used ----
	codecSelferValueTypeArray558 = 10
	codecSelferValueTypeMap558   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey558    = 2
	codecSelfer_containerMapValue558  = 3
	codecSelfer_containerMapEnd558    = 4
	codecSelfer_containerArrayElem558 = 6
	codecSelfer_containerArrayEnd558  = 7
)

var (
	codecSelferBitsize558                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr558 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer558 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
	}
}

func (x *Message) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [17]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[1] = x.Source != ""
			yyq2[2] = x.Destination != ""
			yyq2[3] = x.TransactionUUID != ""
			yyq2[4] = x.ContentType != ""
			yyq2[5] = x.Accept != ""
			yyq2[6] = x.Status != nil
			yyq2[7] = x.RequestDeliveryResponse != nil
			yyq2[8] = len(x.Headers) != 0
			yyq2[9] = len(x.Metadata) != 0
			yyq2[10] = len(x.Spans) != 0
			yyq2[11] = x.IncludeSpans != nil
			yyq2[12] = x.Path != ""
			yyq2[13] = x.Objects != ""
			yyq2[14] = len(x.Payload) != 0
			yyq2[15] = x.ServiceName != ""
			yyq2[16] = x.URL != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(17)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Source))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("source"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Source))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("dest"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("transaction_uuid"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[4] {
					yym16 := z.EncBinary()
					_ = yym16
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("content_type"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym17 := z.EncBinary()
					_ = yym17
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[5] {
					yym19 := z.EncBinary()
					_ = yym19
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Accept))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("accept"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym20 := z.EncBinary()
					_ = yym20
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Accept))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[6] {
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy22 := *x.Status
						yym23 := z.EncBinary()
						_ = yym23
						if false {
						} else {
							r.EncodeInt(int64(yy22))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy24 := *x.Status
						yym25 := z.EncBinary()
						_ = yym25
						if false {
						} else {
							r.EncodeInt(int64(yy24))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[7] {
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy27 := *x.RequestDeliveryResponse
						yym28 := z.EncBinary()
						_ = yym28
						if false {
						} else {
							r.EncodeInt(int64(yy27))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("rdr"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy29 := *x.RequestDeliveryResponse
						yym30 := z.EncBinary()
						_ = yym30
						if false {
						} else {
							r.EncodeInt(int64(yy29))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[8] {
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym32 := z.EncBinary()
						_ = yym32
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("headers"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym33 := z.EncBinary()
						_ = yym33
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[9] {
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym35 := z.EncBinary()
						_ = yym35
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym36 := z.EncBinary()
						_ = yym36
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[10] {
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym38 := z.EncBinary()
						_ = yym38
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym39 := z.EncBinary()
						_ = yym39
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[11] {
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy41 := *x.IncludeSpans
						yym42 := z.EncBinary()
						_ = yym42
						if false {
						} else {
							r.EncodeBool(bool(yy41))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("include_spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy43 := *x.IncludeSpans
						yym44 := z.EncBinary()
						_ = yym44
						if false {
						} else {
							r.EncodeBool(bool(yy43))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[12] {
					yym46 := z.EncBinary()
					_ = yym46
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Path))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("path"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym47 := z.EncBinary()
					_ = yym47
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Path))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[13] {
					yym49 := z.EncBinary()
					_ = yym49
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Objects))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("objects"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym50 := z.EncBinary()
					_ = yym50
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Objects))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[14] {
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym52 := z.EncBinary()
						_ = yym52
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("payload"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym53 := z.EncBinary()
						_ = yym53
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[15] {
					yym55 := z.EncBinary()
					_ = yym55
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ServiceName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("service_name"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym56 := z.EncBinary()
					_ = yym56
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ServiceName))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[16] {
					yym58 := z.EncBinary()
					_ = yym58
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.URL))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("url"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym59 := z.EncBinary()
					_ = yym59
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.URL))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *Message) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *Message) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "source":
			if r.TryDecodeAsNil() {
				x.Source = ""
			} else {
				yyv6 := &x.Source
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "dest":
			if r.TryDecodeAsNil() {
				x.Destination = ""
			} else {
				yyv8 := &x.Destination
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "transaction_uuid":
			if r.TryDecodeAsNil() {
				x.TransactionUUID = ""
			} else {
				yyv10 := &x.TransactionUUID
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "content_type":
			if r.TryDecodeAsNil() {
				x.ContentType = ""
			} else {
				yyv12 := &x.ContentType
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					*((*string)(yyv12)) = r.DecodeString()
				}
			}
		case "accept":
			if r.TryDecodeAsNil() {
				x.Accept = ""
			} else {
				yyv14 := &x.Accept
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					*((*string)(yyv14)) = r.DecodeString()
				}
			}
		case "status":
			if r.TryDecodeAsNil() {
				if x.Status != nil {
					x.Status = nil
				}
			} else {
				if x.Status == nil {
					x.Status = new(int64)
				}
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else {
					*((*int64)(x.Status)) = int64(r.DecodeInt(64))
				}
			}
		case "rdr":
			if r.TryDecodeAsNil() {
				if x.RequestDeliveryResponse != nil {
					x.RequestDeliveryResponse = nil
				}
			} else {
				if x.RequestDeliveryResponse == nil {
					x.RequestDeliveryResponse = new(int64)
				}
				yym19 := z.DecBinary()
				_ = yym19
				if false {
				} else {
					*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
				}
			}
		case "headers":
			if r.TryDecodeAsNil() {
				x.Headers = nil
			} else {
				yyv20 := &x.Headers
				yym21 := z.DecBinary()
				_ = yym21
				if false {
				} else {
					z.F.DecSliceStringX(yyv20, false, d)
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.Metadata = nil
			} else {
				yyv22 := &x.Metadata
				yym23 := z.DecBinary()
				_ = yym23
				if false {
				} else {
					z.F.DecMapStringStringX(yyv22, false, d)
				}
			}
		case "spans":
			if r.TryDecodeAsNil() {
				x.Spans = nil
			} else {
				yyv24 := &x.Spans
				yym25 := z.DecBinary()
				_ = yym25
				if false {
				} else {
					h.decSliceSlicestring((*[][]string)(yyv24), d)
				}
			}
		case "include_spans":
			if r.TryDecodeAsNil() {
				if x.IncludeSpans != nil {
					x.IncludeSpans = nil
				}
			} else {
				if x.IncludeSpans == nil {
					x.IncludeSpans = new(bool)
				}
				yym27 := z.DecBinary()
				_ = yym27
				if false {
				} else {
					*((*bool)(x.IncludeSpans)) = r.DecodeBool()
				}
			}
		case "path":
			if r.TryDecodeAsNil() {
				x.Path = ""
			} else {
				yyv28 := &x.Path
				yym29 := z.DecBinary()
				_ = yym29
				if false {
				} else {
					*((*string)(yyv28)) = r.DecodeString()
				}
			}
		case "objects":
			if r.TryDecodeAsNil() {
				x.Objects = ""
			} else {
				yyv30 := &x.Objects
				yym31 := z.DecBinary()
				_ = yym31
				if false {
				} else {
					*((*string)(yyv30)) = r.DecodeString()
				}
			}
		case "payload":
			if r.TryDecodeAsNil() {
				x.Payload = nil
			} else {
				yyv32 := &x.Payload
				yym33 := z.DecBinary()
				_ = yym33
				if false {
				} else {
					*yyv32 = r.DecodeBytes(*(*[]byte)(yyv32), false, false)
				}
			}
		case "service_name":
			if r.TryDecodeAsNil() {
				x.ServiceName = ""
			} else {
				yyv34 := &x.ServiceName
				yym35 := z.DecBinary()
				_ = yym35
				if false {
				} else {
					*((*string)(yyv34)) = r.DecodeString()
				}
			}
		case "url":
			if r.TryDecodeAsNil() {
				x.URL = ""
			} else {
				yyv36 := &x.URL
				yym37 := z.DecBinary()
				_ = yym37
				if false {
				} else {
					*((*string)(yyv36)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *Message) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj38 int
	var yyb38 bool
	var yyhl38 bool = l >= 0
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv39 := &x.Type
		yym40 := z.DecBinary()
		_ = yym40
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv39) {
		} else {
			*((*int64)(yyv39)) = int64(r.DecodeInt(64))
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Source = ""
	} else {
		yyv41 := &x.Source
		yym42 := z.DecBinary()
		_ = yym42
		if false {
		} else {
			*((*string)(yyv41)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Destination = ""
	} else {
		yyv43 := &x.Destination
		yym44 := z.DecBinary()
		_ = yym44
		if false {
		} else {
			*((*string)(yyv43)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.TransactionUUID = ""
	} else {
		yyv45 := &x.TransactionUUID
		yym46 := z.DecBinary()
		_ = yym46
		if false {
		} else {
			*((*string)(yyv45)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.ContentType = ""
	} else {
		yyv47 := &x.ContentType
		yym48 := z.DecBinary()
		_ = yym48
		if false {
		} else {
			*((*string)(yyv47)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Accept = ""
	} else {
		yyv49 := &x.Accept
		yym50 := z.DecBinary()
		_ = yym50
		if false {
		} else {
			*((*string)(yyv49)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.Status != nil {
			x.Status = nil
		}
	} else {
		if x.Status == nil {
			x.Status = new(int64)
		}
		yym52 := z.DecBinary()
		_ = yym52
		if false {
		} else {
			*((*int64)(x.Status)) = int64(r.DecodeInt(64))
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.RequestDeliveryResponse != nil {
			x.RequestDeliveryResponse = nil
		}
	} else {
		if x.RequestDeliveryResponse == nil {
			x.RequestDeliveryResponse = new(int64)
		}
		yym54 := z.DecBinary()
		_ = yym54
		if false {
		} else {
			*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Headers = nil
	} else {
		yyv55 := &x.Headers
		yym56 := z.DecBinary()
		_ = yym56
		if false {
		} else {
			z.F.DecSliceStringX(yyv55, false, d)
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Metadata = nil
	} else {
		yyv57 := &x.Metadata
		yym58 := z.DecBinary()
		_ = yym58
		if false {
		} else {
			z.F.DecMapStringStringX(yyv57, false, d)
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Spans = nil
	} else {
		yyv59 := &x.Spans
		yym60 := z.DecBinary()
		_ = yym60
		if false {
		} else {
			h.decSliceSlicestring((*[][]string)(yyv59), d)
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.IncludeSpans != nil {
			x.IncludeSpans = nil
		}
	} else {
		if x.IncludeSpans == nil {
			x.IncludeSpans = new(bool)
		}
		yym62 := z.DecBinary()
		_ = yym62
		if false {
		} else {
			*((*bool)(x.IncludeSpans)) = r.DecodeBool()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Path = ""
	} else {
		yyv63 := &x.Path
		yym64 := z.DecBinary()
		_ = yym64
		if false {
		} else {
			*((*string)(yyv63)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Objects = ""
	} else {
		yyv65 := &x.Objects
		yym66 := z.DecBinary()
		_ = yym66
		if false {
		} else {
			*((*string)(yyv65)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Payload = nil
	} else {
		yyv67 := &x.Payload
		yym68 := z.DecBinary()
		_ = yym68
		if false {
		} else {
			*yyv67 = r.DecodeBytes(*(*[]byte)(yyv67), false, false)
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.ServiceName = ""
	} else {
		yyv69 := &x.ServiceName
		yym70 := z.DecBinary()
		_ = yym70
		if false {
		} else {
			*((*string)(yyv69)) = r.DecodeString()
		}
	}
	yyj38++
	if yyhl38 {
		yyb38 = yyj38 > l
	} else {
		yyb38 = r.CheckBreak()
	}
	if yyb38 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.URL = ""
	} else {
		yyv71 := &x.URL
		yym72 := z.DecBinary()
		_ = yym72
		if false {
		} else {
			*((*string)(yyv71)) = r.DecodeString()
		}
	}
	for {
		yyj38++
		if yyhl38 {
			yyb38 = yyj38 > l
		} else {
			yyb38 = r.CheckBreak()
		}
		if yyb38 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj38-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *AuthorizationStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [2]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(2)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeInt(int64(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("status"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeInt(int64(x.Status))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *AuthorizationStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *AuthorizationStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = 0
			} else {
				yyv6 := &x.Status
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*int64)(yyv6)) = int64(r.DecodeInt(64))
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *AuthorizationStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj8 int
	var yyb8 bool
	var yyhl8 bool = l >= 0
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv9 := &x.Type
		yym10 := z.DecBinary()
		_ = yym10
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv9) {
		} else {
			*((*int64)(yyv9)) = int64(r.DecodeInt(64))
		}
	}
	yyj8++
	if yyhl8 {
		yyb8 = yyj8 > l
	} else {
		yyb8 = r.CheckBreak()
	}
	if yyb8 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Status = 0
	} else {
		yyv11 := &x.Status
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else {
			*((*int64)(yyv11)) = int64(r.DecodeInt(64))
		}
	}
	for {
		yyj8++
		if yyhl8 {
			yyb8 = yyj8 > l
		} else {
			yyb8 = r.CheckBreak()
		}
		if yyb8 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj8-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *SimpleRequestResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [13]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[3] = x.ContentType != ""
			yyq2[4] = x.Accept != ""
			yyq2[5] = x.TransactionUUID != ""
			yyq2[6] = x.Status != nil
			yyq2[7] = x.RequestDeliveryResponse != nil
			yyq2[8] = len(x.Headers) != 0
			yyq2[9] = len(x.Metadata) != 0
			yyq2[10] = len(x.Spans) != 0
			yyq2[11] = x.IncludeSpans != nil
			yyq2[12] = len(x.Payload) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(13)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("source"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("dest"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("content_type"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[4] {
					yym16 := z.EncBinary()
					_ = yym16
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Accept))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("accept"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym17 := z.EncBinary()
					_ = yym17
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Accept))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[5] {
					yym19 := z.EncBinary()
					_ = yym19
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("transaction_uuid"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym20 := z.EncBinary()
					_ = yym20
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[6] {
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy22 := *x.Status
						yym23 := z.EncBinary()
						_ = yym23
						if false {
						} else {
							r.EncodeInt(int64(yy22))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy24 := *x.Status
						yym25 := z.EncBinary()
						_ = yym25
						if false {
						} else {
							r.EncodeInt(int64(yy24))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[7] {
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy27 := *x.RequestDeliveryResponse
						yym28 := z.EncBinary()
						_ = yym28
						if false {
						} else {
							r.EncodeInt(int64(yy27))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("rdr"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy29 := *x.RequestDeliveryResponse
						yym30 := z.EncBinary()
						_ = yym30
						if false {
						} else {
							r.EncodeInt(int64(yy29))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[8] {
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym32 := z.EncBinary()
						_ = yym32
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("headers"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym33 := z.EncBinary()
						_ = yym33
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[9] {
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym35 := z.EncBinary()
						_ = yym35
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym36 := z.EncBinary()
						_ = yym36
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[10] {
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym38 := z.EncBinary()
						_ = yym38
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym39 := z.EncBinary()
						_ = yym39
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[11] {
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy41 := *x.IncludeSpans
						yym42 := z.EncBinary()
						_ = yym42
						if false {
						} else {
							r.EncodeBool(bool(yy41))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("include_spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy43 := *x.IncludeSpans
						yym44 := z.EncBinary()
						_ = yym44
						if false {
						} else {
							r.EncodeBool(bool(yy43))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[12] {
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym46 := z.EncBinary()
						_ = yym46
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("payload"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym47 := z.EncBinary()
						_ = yym47
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *SimpleRequestResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *SimpleRequestResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "source":
			if r.TryDecodeAsNil() {
				x.Source = ""
			} else {
				yyv6 := &x.Source
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "dest":
			if r.TryDecodeAsNil() {
				x.Destination = ""
			} else {
				yyv8 := &x.Destination
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "content_type":
			if r.TryDecodeAsNil() {
				x.ContentType = ""
			} else {
				yyv10 := &x.ContentType
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "accept":
			if r.TryDecodeAsNil() {
				x.Accept = ""
			} else {
				yyv12 := &x.Accept
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					*((*string)(yyv12)) = r.DecodeString()
				}
			}
		case "transaction_uuid":
			if r.TryDecodeAsNil() {
				x.TransactionUUID = ""
			} else {
				yyv14 := &x.TransactionUUID
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					*((*string)(yyv14)) = r.DecodeString()
				}
			}
		case "status":
			if r.TryDecodeAsNil() {
				if x.Status != nil {
					x.Status = nil
				}
			} else {
				if x.Status == nil {
					x.Status = new(int64)
				}
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else {
					*((*int64)(x.Status)) = int64(r.DecodeInt(64))
				}
			}
		case "rdr":
			if r.TryDecodeAsNil() {
				if x.RequestDeliveryResponse != nil {
					x.RequestDeliveryResponse = nil
				}
			} else {
				if x.RequestDeliveryResponse == nil {
					x.RequestDeliveryResponse = new(int64)
				}
				yym19 := z.DecBinary()
				_ = yym19
				if false {
				} else {
					*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
				}
			}
		case "headers":
			if r.TryDecodeAsNil() {
				x.Headers = nil
			} else {
				yyv20 := &x.Headers
				yym21 := z.DecBinary()
				_ = yym21
				if false {
				} else {
					z.F.DecSliceStringX(yyv20, false, d)
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.Metadata = nil
			} else {
				yyv22 := &x.Metadata
				yym23 := z.DecBinary()
				_ = yym23
				if false {
				} else {
					z.F.DecMapStringStringX(yyv22, false, d)
				}
			}
		case "spans":
			if r.TryDecodeAsNil() {
				x.Spans = nil
			} else {
				yyv24 := &x.Spans
				yym25 := z.DecBinary()
				_ = yym25
				if false {
				} else {
					h.decSliceSlicestring((*[][]string)(yyv24), d)
				}
			}
		case "include_spans":
			if r.TryDecodeAsNil() {
				if x.IncludeSpans != nil {
					x.IncludeSpans = nil
				}
			} else {
				if x.IncludeSpans == nil {
					x.IncludeSpans = new(bool)
				}
				yym27 := z.DecBinary()
				_ = yym27
				if false {
				} else {
					*((*bool)(x.IncludeSpans)) = r.DecodeBool()
				}
			}
		case "payload":
			if r.TryDecodeAsNil() {
				x.Payload = nil
			} else {
				yyv28 := &x.Payload
				yym29 := z.DecBinary()
				_ = yym29
				if false {
				} else {
					*yyv28 = r.DecodeBytes(*(*[]byte)(yyv28), false, false)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *SimpleRequestResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj30 int
	var yyb30 bool
	var yyhl30 bool = l >= 0
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv31 := &x.Type
		yym32 := z.DecBinary()
		_ = yym32
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv31) {
		} else {
			*((*int64)(yyv31)) = int64(r.DecodeInt(64))
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Source = ""
	} else {
		yyv33 := &x.Source
		yym34 := z.DecBinary()
		_ = yym34
		if false {
		} else {
			*((*string)(yyv33)) = r.DecodeString()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Destination = ""
	} else {
		yyv35 := &x.Destination
		yym36 := z.DecBinary()
		_ = yym36
		if false {
		} else {
			*((*string)(yyv35)) = r.DecodeString()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.ContentType = ""
	} else {
		yyv37 := &x.ContentType
		yym38 := z.DecBinary()
		_ = yym38
		if false {
		} else {
			*((*string)(yyv37)) = r.DecodeString()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Accept = ""
	} else {
		yyv39 := &x.Accept
		yym40 := z.DecBinary()
		_ = yym40
		if false {
		} else {
			*((*string)(yyv39)) = r.DecodeString()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.TransactionUUID = ""
	} else {
		yyv41 := &x.TransactionUUID
		yym42 := z.DecBinary()
		_ = yym42
		if false {
		} else {
			*((*string)(yyv41)) = r.DecodeString()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.Status != nil {
			x.Status = nil
		}
	} else {
		if x.Status == nil {
			x.Status = new(int64)
		}
		yym44 := z.DecBinary()
		_ = yym44
		if false {
		} else {
			*((*int64)(x.Status)) = int64(r.DecodeInt(64))
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.RequestDeliveryResponse != nil {
			x.RequestDeliveryResponse = nil
		}
	} else {
		if x.RequestDeliveryResponse == nil {
			x.RequestDeliveryResponse = new(int64)
		}
		yym46 := z.DecBinary()
		_ = yym46
		if false {
		} else {
			*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Headers = nil
	} else {
		yyv47 := &x.Headers
		yym48 := z.DecBinary()
		_ = yym48
		if false {
		} else {
			z.F.DecSliceStringX(yyv47, false, d)
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Metadata = nil
	} else {
		yyv49 := &x.Metadata
		yym50 := z.DecBinary()
		_ = yym50
		if false {
		} else {
			z.F.DecMapStringStringX(yyv49, false, d)
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Spans = nil
	} else {
		yyv51 := &x.Spans
		yym52 := z.DecBinary()
		_ = yym52
		if false {
		} else {
			h.decSliceSlicestring((*[][]string)(yyv51), d)
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.IncludeSpans != nil {
			x.IncludeSpans = nil
		}
	} else {
		if x.IncludeSpans == nil {
			x.IncludeSpans = new(bool)
		}
		yym54 := z.DecBinary()
		_ = yym54
		if false {
		} else {
			*((*bool)(x.IncludeSpans)) = r.DecodeBool()
		}
	}
	yyj30++
	if yyhl30 {
		yyb30 = yyj30 > l
	} else {
		yyb30 = r.CheckBreak()
	}
	if yyb30 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Payload = nil
	} else {
		yyv55 := &x.Payload
		yym56 := z.DecBinary()
		_ = yym56
		if false {
		} else {
			*yyv55 = r.DecodeBytes(*(*[]byte)(yyv55), false, false)
		}
	}
	for {
		yyj30++
		if yyhl30 {
			yyb30 = yyj30 > l
		} else {
			yyb30 = r.CheckBreak()
		}
		if yyb30 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj30-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *SimpleEvent) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [7]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[3] = x.ContentType != ""
			yyq2[4] = len(x.Headers) != 0
			yyq2[5] = len(x.Metadata) != 0
			yyq2[6] = len(x.Payload) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(7)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("source"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("dest"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("content_type"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.ContentType))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[4] {
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("headers"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym17 := z.EncBinary()
						_ = yym17
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[5] {
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym19 := z.EncBinary()
						_ = yym19
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym20 := z.EncBinary()
						_ = yym20
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[6] {
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym22 := z.EncBinary()
						_ = yym22
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("payload"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Payload == nil {
						r.EncodeNil()
					} else {
						yym23 := z.EncBinary()
						_ = yym23
						if false {
						} else {
							r.EncodeStringBytes(codecSelferC_RAW558, []byte(x.Payload))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *SimpleEvent) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *SimpleEvent) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "source":
			if r.TryDecodeAsNil() {
				x.Source = ""
			} else {
				yyv6 := &x.Source
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "dest":
			if r.TryDecodeAsNil() {
				x.Destination = ""
			} else {
				yyv8 := &x.Destination
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "content_type":
			if r.TryDecodeAsNil() {
				x.ContentType = ""
			} else {
				yyv10 := &x.ContentType
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "headers":
			if r.TryDecodeAsNil() {
				x.Headers = nil
			} else {
				yyv12 := &x.Headers
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					z.F.DecSliceStringX(yyv12, false, d)
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.Metadata = nil
			} else {
				yyv14 := &x.Metadata
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					z.F.DecMapStringStringX(yyv14, false, d)
				}
			}
		case "payload":
			if r.TryDecodeAsNil() {
				x.Payload = nil
			} else {
				yyv16 := &x.Payload
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else {
					*yyv16 = r.DecodeBytes(*(*[]byte)(yyv16), false, false)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *SimpleEvent) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj18 int
	var yyb18 bool
	var yyhl18 bool = l >= 0
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv19 := &x.Type
		yym20 := z.DecBinary()
		_ = yym20
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv19) {
		} else {
			*((*int64)(yyv19)) = int64(r.DecodeInt(64))
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Source = ""
	} else {
		yyv21 := &x.Source
		yym22 := z.DecBinary()
		_ = yym22
		if false {
		} else {
			*((*string)(yyv21)) = r.DecodeString()
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Destination = ""
	} else {
		yyv23 := &x.Destination
		yym24 := z.DecBinary()
		_ = yym24
		if false {
		} else {
			*((*string)(yyv23)) = r.DecodeString()
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.ContentType = ""
	} else {
		yyv25 := &x.ContentType
		yym26 := z.DecBinary()
		_ = yym26
		if false {
		} else {
			*((*string)(yyv25)) = r.DecodeString()
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Headers = nil
	} else {
		yyv27 := &x.Headers
		yym28 := z.DecBinary()
		_ = yym28
		if false {
		} else {
			z.F.DecSliceStringX(yyv27, false, d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Metadata = nil
	} else {
		yyv29 := &x.Metadata
		yym30 := z.DecBinary()
		_ = yym30
		if false {
		} else {
			z.F.DecMapStringStringX(yyv29, false, d)
		}
	}
	yyj18++
	if yyhl18 {
		yyb18 = yyj18 > l
	} else {
		yyb18 = r.CheckBreak()
	}
	if yyb18 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Payload = nil
	} else {
		yyv31 := &x.Payload
		yym32 := z.DecBinary()
		_ = yym32
		if false {
		} else {
			*yyv31 = r.DecodeBytes(*(*[]byte)(yyv31), false, false)
		}
	}
	for {
		yyj18++
		if yyhl18 {
			yyb18 = yyj18 > l
		} else {
			yyb18 = r.CheckBreak()
		}
		if yyb18 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj18-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *CRUD) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [12]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[3] = x.TransactionUUID != ""
			yyq2[4] = len(x.Headers) != 0
			yyq2[5] = len(x.Metadata) != 0
			yyq2[6] = len(x.Spans) != 0
			yyq2[7] = x.IncludeSpans != nil
			yyq2[8] = x.Status != nil
			yyq2[9] = x.RequestDeliveryResponse != nil
			yyq2[11] = x.Objects != ""
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(12)
			} else {
				yynn2 = 4
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("source"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Source))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("dest"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Destination))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("transaction_uuid"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.TransactionUUID))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[4] {
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym16 := z.EncBinary()
						_ = yym16
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("headers"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Headers == nil {
						r.EncodeNil()
					} else {
						yym17 := z.EncBinary()
						_ = yym17
						if false {
						} else {
							z.F.EncSliceStringV(x.Headers, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[5] {
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym19 := z.EncBinary()
						_ = yym19
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Metadata == nil {
						r.EncodeNil()
					} else {
						yym20 := z.EncBinary()
						_ = yym20
						if false {
						} else {
							z.F.EncMapStringStringV(x.Metadata, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[6] {
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym22 := z.EncBinary()
						_ = yym22
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Spans == nil {
						r.EncodeNil()
					} else {
						yym23 := z.EncBinary()
						_ = yym23
						if false {
						} else {
							h.encSliceSlicestring(([][]string)(x.Spans), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[7] {
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy25 := *x.IncludeSpans
						yym26 := z.EncBinary()
						_ = yym26
						if false {
						} else {
							r.EncodeBool(bool(yy25))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("include_spans"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.IncludeSpans == nil {
						r.EncodeNil()
					} else {
						yy27 := *x.IncludeSpans
						yym28 := z.EncBinary()
						_ = yym28
						if false {
						} else {
							r.EncodeBool(bool(yy27))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[8] {
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy30 := *x.Status
						yym31 := z.EncBinary()
						_ = yym31
						if false {
						} else {
							r.EncodeInt(int64(yy30))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("status"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.Status == nil {
						r.EncodeNil()
					} else {
						yy32 := *x.Status
						yym33 := z.EncBinary()
						_ = yym33
						if false {
						} else {
							r.EncodeInt(int64(yy32))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[9] {
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy35 := *x.RequestDeliveryResponse
						yym36 := z.EncBinary()
						_ = yym36
						if false {
						} else {
							r.EncodeInt(int64(yy35))
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("rdr"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					if x.RequestDeliveryResponse == nil {
						r.EncodeNil()
					} else {
						yy37 := *x.RequestDeliveryResponse
						yym38 := z.EncBinary()
						_ = yym38
						if false {
						} else {
							r.EncodeInt(int64(yy37))
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym40 := z.EncBinary()
				_ = yym40
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Path))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("path"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym41 := z.EncBinary()
				_ = yym41
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.Path))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				if yyq2[11] {
					yym43 := z.EncBinary()
					_ = yym43
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Objects))
					}
				} else {
					r.EncodeString(codecSelferC_UTF8558, "")
				}
			} else {
				if yyq2[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey558)
					r.EncodeString(codecSelferC_UTF8558, string("objects"))
					z.EncSendContainerState(codecSelfer_containerMapValue558)
					yym44 := z.EncBinary()
					_ = yym44
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF8558, string(x.Objects))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *CRUD) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *CRUD) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "source":
			if r.TryDecodeAsNil() {
				x.Source = ""
			} else {
				yyv6 := &x.Source
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "dest":
			if r.TryDecodeAsNil() {
				x.Destination = ""
			} else {
				yyv8 := &x.Destination
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		case "transaction_uuid":
			if r.TryDecodeAsNil() {
				x.TransactionUUID = ""
			} else {
				yyv10 := &x.TransactionUUID
				yym11 := z.DecBinary()
				_ = yym11
				if false {
				} else {
					*((*string)(yyv10)) = r.DecodeString()
				}
			}
		case "headers":
			if r.TryDecodeAsNil() {
				x.Headers = nil
			} else {
				yyv12 := &x.Headers
				yym13 := z.DecBinary()
				_ = yym13
				if false {
				} else {
					z.F.DecSliceStringX(yyv12, false, d)
				}
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.Metadata = nil
			} else {
				yyv14 := &x.Metadata
				yym15 := z.DecBinary()
				_ = yym15
				if false {
				} else {
					z.F.DecMapStringStringX(yyv14, false, d)
				}
			}
		case "spans":
			if r.TryDecodeAsNil() {
				x.Spans = nil
			} else {
				yyv16 := &x.Spans
				yym17 := z.DecBinary()
				_ = yym17
				if false {
				} else {
					h.decSliceSlicestring((*[][]string)(yyv16), d)
				}
			}
		case "include_spans":
			if r.TryDecodeAsNil() {
				if x.IncludeSpans != nil {
					x.IncludeSpans = nil
				}
			} else {
				if x.IncludeSpans == nil {
					x.IncludeSpans = new(bool)
				}
				yym19 := z.DecBinary()
				_ = yym19
				if false {
				} else {
					*((*bool)(x.IncludeSpans)) = r.DecodeBool()
				}
			}
		case "status":
			if r.TryDecodeAsNil() {
				if x.Status != nil {
					x.Status = nil
				}
			} else {
				if x.Status == nil {
					x.Status = new(int64)
				}
				yym21 := z.DecBinary()
				_ = yym21
				if false {
				} else {
					*((*int64)(x.Status)) = int64(r.DecodeInt(64))
				}
			}
		case "rdr":
			if r.TryDecodeAsNil() {
				if x.RequestDeliveryResponse != nil {
					x.RequestDeliveryResponse = nil
				}
			} else {
				if x.RequestDeliveryResponse == nil {
					x.RequestDeliveryResponse = new(int64)
				}
				yym23 := z.DecBinary()
				_ = yym23
				if false {
				} else {
					*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
				}
			}
		case "path":
			if r.TryDecodeAsNil() {
				x.Path = ""
			} else {
				yyv24 := &x.Path
				yym25 := z.DecBinary()
				_ = yym25
				if false {
				} else {
					*((*string)(yyv24)) = r.DecodeString()
				}
			}
		case "objects":
			if r.TryDecodeAsNil() {
				x.Objects = ""
			} else {
				yyv26 := &x.Objects
				yym27 := z.DecBinary()
				_ = yym27
				if false {
				} else {
					*((*string)(yyv26)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *CRUD) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj28 int
	var yyb28 bool
	var yyhl28 bool = l >= 0
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv29 := &x.Type
		yym30 := z.DecBinary()
		_ = yym30
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv29) {
		} else {
			*((*int64)(yyv29)) = int64(r.DecodeInt(64))
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Source = ""
	} else {
		yyv31 := &x.Source
		yym32 := z.DecBinary()
		_ = yym32
		if false {
		} else {
			*((*string)(yyv31)) = r.DecodeString()
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Destination = ""
	} else {
		yyv33 := &x.Destination
		yym34 := z.DecBinary()
		_ = yym34
		if false {
		} else {
			*((*string)(yyv33)) = r.DecodeString()
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.TransactionUUID = ""
	} else {
		yyv35 := &x.TransactionUUID
		yym36 := z.DecBinary()
		_ = yym36
		if false {
		} else {
			*((*string)(yyv35)) = r.DecodeString()
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Headers = nil
	} else {
		yyv37 := &x.Headers
		yym38 := z.DecBinary()
		_ = yym38
		if false {
		} else {
			z.F.DecSliceStringX(yyv37, false, d)
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Metadata = nil
	} else {
		yyv39 := &x.Metadata
		yym40 := z.DecBinary()
		_ = yym40
		if false {
		} else {
			z.F.DecMapStringStringX(yyv39, false, d)
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Spans = nil
	} else {
		yyv41 := &x.Spans
		yym42 := z.DecBinary()
		_ = yym42
		if false {
		} else {
			h.decSliceSlicestring((*[][]string)(yyv41), d)
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.IncludeSpans != nil {
			x.IncludeSpans = nil
		}
	} else {
		if x.IncludeSpans == nil {
			x.IncludeSpans = new(bool)
		}
		yym44 := z.DecBinary()
		_ = yym44
		if false {
		} else {
			*((*bool)(x.IncludeSpans)) = r.DecodeBool()
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.Status != nil {
			x.Status = nil
		}
	} else {
		if x.Status == nil {
			x.Status = new(int64)
		}
		yym46 := z.DecBinary()
		_ = yym46
		if false {
		} else {
			*((*int64)(x.Status)) = int64(r.DecodeInt(64))
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		if x.RequestDeliveryResponse != nil {
			x.RequestDeliveryResponse = nil
		}
	} else {
		if x.RequestDeliveryResponse == nil {
			x.RequestDeliveryResponse = new(int64)
		}
		yym48 := z.DecBinary()
		_ = yym48
		if false {
		} else {
			*((*int64)(x.RequestDeliveryResponse)) = int64(r.DecodeInt(64))
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Path = ""
	} else {
		yyv49 := &x.Path
		yym50 := z.DecBinary()
		_ = yym50
		if false {
		} else {
			*((*string)(yyv49)) = r.DecodeString()
		}
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Objects = ""
	} else {
		yyv51 := &x.Objects
		yym52 := z.DecBinary()
		_ = yym52
		if false {
		} else {
			*((*string)(yyv51)) = r.DecodeString()
		}
	}
	for {
		yyj28++
		if yyhl28 {
			yyb28 = yyj28 > l
		} else {
			yyb28 = r.CheckBreak()
		}
		if yyb28 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj28-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *ServiceRegistration) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [3]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(3)
			} else {
				yynn2 = 3
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.ServiceName))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("service_name"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym8 := z.EncBinary()
				_ = yym8
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.ServiceName))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.URL))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("url"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym11 := z.EncBinary()
				_ = yym11
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF8558, string(x.URL))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *ServiceRegistration) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *ServiceRegistration) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		case "service_name":
			if r.TryDecodeAsNil() {
				x.ServiceName = ""
			} else {
				yyv6 := &x.ServiceName
				yym7 := z.DecBinary()
				_ = yym7
				if false {
				} else {
					*((*string)(yyv6)) = r.DecodeString()
				}
			}
		case "url":
			if r.TryDecodeAsNil() {
				x.URL = ""
			} else {
				yyv8 := &x.URL
				yym9 := z.DecBinary()
				_ = yym9
				if false {
				} else {
					*((*string)(yyv8)) = r.DecodeString()
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *ServiceRegistration) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj10 int
	var yyb10 bool
	var yyhl10 bool = l >= 0
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv11 := &x.Type
		yym12 := z.DecBinary()
		_ = yym12
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv11) {
		} else {
			*((*int64)(yyv11)) = int64(r.DecodeInt(64))
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.ServiceName = ""
	} else {
		yyv13 := &x.ServiceName
		yym14 := z.DecBinary()
		_ = yym14
		if false {
		} else {
			*((*string)(yyv13)) = r.DecodeString()
		}
	}
	yyj10++
	if yyhl10 {
		yyb10 = yyj10 > l
	} else {
		yyb10 = r.CheckBreak()
	}
	if yyb10 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.URL = ""
	} else {
		yyv15 := &x.URL
		yym16 := z.DecBinary()
		_ = yym16
		if false {
		} else {
			*((*string)(yyv15)) = r.DecodeString()
		}
	}
	for {
		yyj10++
		if yyhl10 {
			yyb10 = yyj10 > l
		} else {
			yyb10 = r.CheckBreak()
		}
		if yyb10 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj10-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x *ServiceAlive) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [1]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(1)
			} else {
				yynn2 = 1
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem558)
				yym4 := z.EncBinary()
				_ = yym4
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey558)
				r.EncodeString(codecSelferC_UTF8558, string("msg_type"))
				z.EncSendContainerState(codecSelfer_containerMapValue558)
				yym5 := z.EncBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Type) {
				} else {
					r.EncodeInt(int64(x.Type))
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd558)
			}
		}
	}
}

func (x *ServiceAlive) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1 := z.DecBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2 := r.ContainerType()
		if yyct2 == codecSelferValueTypeMap558 {
			yyl2 := r.ReadMapStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd558)
			} else {
				x.codecDecodeSelfFromMap(yyl2, d)
			}
		} else if yyct2 == codecSelferValueTypeArray558 {
			yyl2 := r.ReadArrayStart()
			if yyl2 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd558)
			} else {
				x.codecDecodeSelfFromArray(yyl2, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr558)
		}
	}
}

func (x *ServiceAlive) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys3Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys3Slc
	var yyhl3 bool = l >= 0
	for yyj3 := 0; ; yyj3++ {
		if yyhl3 {
			if yyj3 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey558)
		yys3Slc = r.DecodeBytes(yys3Slc, true, true)
		yys3 := string(yys3Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue558)
		switch yys3 {
		case "msg_type":
			if r.TryDecodeAsNil() {
				x.Type = 0
			} else {
				yyv4 := &x.Type
				yym5 := z.DecBinary()
				_ = yym5
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv4) {
				} else {
					*((*int64)(yyv4)) = int64(r.DecodeInt(64))
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys3)
		} // end switch yys3
	} // end for yyj3
	z.DecSendContainerState(codecSelfer_containerMapEnd558)
}

func (x *ServiceAlive) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj6 int
	var yyb6 bool
	var yyhl6 bool = l >= 0
	yyj6++
	if yyhl6 {
		yyb6 = yyj6 > l
	} else {
		yyb6 = r.CheckBreak()
	}
	if yyb6 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd558)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem558)
	if r.TryDecodeAsNil() {
		x.Type = 0
	} else {
		yyv7 := &x.Type
		yym8 := z.DecBinary()
		_ = yym8
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv7) {
		} else {
			*((*int64)(yyv7)) = int64(r.DecodeInt(64))
		}
	}
	for {
		yyj6++
		if yyhl6 {
			yyb6 = yyj6 > l
		} else {
			yyb6 = r.CheckBreak()
		}
		if yyb6 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem558)
		z.DecStructFieldNotFound(yyj6-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x codecSelfer558) encSliceSlicestring(v [][]string, e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem558)
		if yyv1 == nil {
			r.EncodeNil()
		} else {
			yym2 := z.EncBinary()
			_ = yym2
			if false {
			} else {
				z.F.EncSliceStringV(yyv1, false, e)
			}
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x codecSelfer558) decSliceSlicestring(v *[][]string, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = [][]string{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrg1 := len(yyv1) > 0
			yyv21 := yyv1
			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 24)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([][]string, yyrl1)
				}
			} else {
				yyv1 = make([][]string, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
			if yyrg1 {
				copy(yyv1, yyv21)
			}
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = nil
			} else {
				yyv2 := &yyv1[yyj1]
				yym3 := z.DecBinary()
				_ = yym3
				if false {
				} else {
					z.F.DecSliceStringX(yyv2, false, d)
				}
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, nil)
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = nil
				} else {
					yyv4 := &yyv1[yyj1]
					yym5 := z.DecBinary()
					_ = yym5
					if false {
					} else {
						z.F.DecSliceStringX(yyv4, false, d)
					}
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, nil) // var yyz1 []string
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = nil
				} else {
					yyv6 := &yyv1[yyj1]
					yym7 := z.DecBinary()
					_ = yym7
					if false {
					} else {
						z.F.DecSliceStringX(yyv6, false, d)
					}
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = [][]string{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}

func (x codecSelfer558) encSlicestring(v []string, e *codec1978.Encoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv1 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem558)
		yym2 := z.EncBinary()
		_ = yym2
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF8558, string(yyv1))
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd558)
}

func (x codecSelfer558) decSlicestring(v *[]string, d *codec1978.Decoder) {
	var h codecSelfer558
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv1 := *v
	yyh1, yyl1 := z.DecSliceHelperStart()
	var yyc1 bool
	_ = yyc1
	if yyl1 == 0 {
		if yyv1 == nil {
			yyv1 = []string{}
			yyc1 = true
		} else if len(yyv1) != 0 {
			yyv1 = yyv1[:0]
			yyc1 = true
		}
	} else if yyl1 > 0 {
		var yyrr1, yyrl1 int
		var yyrt1 bool
		_, _ = yyrl1, yyrt1
		yyrr1 = yyl1 // len(yyv1)
		if yyl1 > cap(yyv1) {

			yyrl1, yyrt1 = z.DecInferLen(yyl1, z.DecBasicHandle().MaxInitLen, 16)
			if yyrt1 {
				if yyrl1 <= cap(yyv1) {
					yyv1 = yyv1[:yyrl1]
				} else {
					yyv1 = make([]string, yyrl1)
				}
			} else {
				yyv1 = make([]string, yyrl1)
			}
			yyc1 = true
			yyrr1 = len(yyv1)
		} else if yyl1 != len(yyv1) {
			yyv1 = yyv1[:yyl1]
			yyc1 = true
		}
		yyj1 := 0
		for ; yyj1 < yyrr1; yyj1++ {
			yyh1.ElemContainerState(yyj1)
			if r.TryDecodeAsNil() {
				yyv1[yyj1] = ""
			} else {
				yyv2 := &yyv1[yyj1]
				yym3 := z.DecBinary()
				_ = yym3
				if false {
				} else {
					*((*string)(yyv2)) = r.DecodeString()
				}
			}

		}
		if yyrt1 {
			for ; yyj1 < yyl1; yyj1++ {
				yyv1 = append(yyv1, "")
				yyh1.ElemContainerState(yyj1)
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = ""
				} else {
					yyv4 := &yyv1[yyj1]
					yym5 := z.DecBinary()
					_ = yym5
					if false {
					} else {
						*((*string)(yyv4)) = r.DecodeString()
					}
				}

			}
		}

	} else {
		yyj1 := 0
		for ; !r.CheckBreak(); yyj1++ {

			if yyj1 >= len(yyv1) {
				yyv1 = append(yyv1, "") // var yyz1 string
				yyc1 = true
			}
			yyh1.ElemContainerState(yyj1)
			if yyj1 < len(yyv1) {
				if r.TryDecodeAsNil() {
					yyv1[yyj1] = ""
				} else {
					yyv6 := &yyv1[yyj1]
					yym7 := z.DecBinary()
					_ = yym7
					if false {
					} else {
						*((*string)(yyv6)) = r.DecodeString()
					}
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj1 < len(yyv1) {
			yyv1 = yyv1[:yyj1]
			yyc1 = true
		} else if yyj1 == 0 && yyv1 == nil {
			yyv1 = []string{}
			yyc1 = true
		}
	}
	yyh1.End()
	if yyc1 {
		*v = yyv1
	}
}
